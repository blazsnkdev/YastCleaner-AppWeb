// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YAST_CLENAER_WEB.Data;

#nullable disable

namespace YAST_CLENAER_WEB.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250613021155_ClientUpd")]
    partial class ClientUpd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.DetalleOrden", b =>
                {
                    b.Property<int>("IdDetalleOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleOrden"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.Property<int?>("IdPrenda")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoServicio")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenIdOrden")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PrendaIdPrenda")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoServicioIdTipoServicio")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleOrden");

                    b.HasIndex("OrdenIdOrden");

                    b.HasIndex("PrendaIdPrenda");

                    b.HasIndex("TipoServicioIdTipoServicio");

                    b.ToTable("DetalleOrdenes");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.EstadoOrden", b =>
                {
                    b.Property<int>("IdEstadoOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoOrden"));

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoOrden");

                    b.ToTable("EstadosOrden");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrden"));

                    b.Property<int>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<int>("EstadoOrdenIdEstadoOrden")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEntregaEstimada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEntregaReal")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("IdEmpleadoAuth0")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEstadoOrden")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdOrden");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("EstadoOrdenIdEstadoOrden");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.Prenda", b =>
                {
                    b.Property<int>("IdPrenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrenda"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPrenda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPrenda");

                    b.ToTable("Prendas");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.TipoServicio", b =>
                {
                    b.Property<int>("IdTipoServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoServicio"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdTipoServicio");

                    b.ToTable("TipoServicios");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.DetalleOrden", b =>
                {
                    b.HasOne("YAST_CLENAER_WEB.Models.Entity.Orden", "Orden")
                        .WithMany("DetallesOrden")
                        .HasForeignKey("OrdenIdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YAST_CLENAER_WEB.Models.Entity.Prenda", "Prenda")
                        .WithMany("DetallesOrden")
                        .HasForeignKey("PrendaIdPrenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YAST_CLENAER_WEB.Models.Entity.TipoServicio", "TipoServicio")
                        .WithMany("DetallesOrden")
                        .HasForeignKey("TipoServicioIdTipoServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("Prenda");

                    b.Navigation("TipoServicio");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.Orden", b =>
                {
                    b.HasOne("YAST_CLENAER_WEB.Models.Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteIdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YAST_CLENAER_WEB.Models.Entity.EstadoOrden", "EstadoOrden")
                        .WithMany("Ordenes")
                        .HasForeignKey("EstadoOrdenIdEstadoOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EstadoOrden");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.EstadoOrden", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.Orden", b =>
                {
                    b.Navigation("DetallesOrden");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.Prenda", b =>
                {
                    b.Navigation("DetallesOrden");
                });

            modelBuilder.Entity("YAST_CLENAER_WEB.Models.Entity.TipoServicio", b =>
                {
                    b.Navigation("DetallesOrden");
                });
#pragma warning restore 612, 618
        }
    }
}
